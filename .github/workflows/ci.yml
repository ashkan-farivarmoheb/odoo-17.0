name: Odoo CI

on:
  push:
    branches: [ "develop", "feature/**"]
  pull_request:
    branches: [ "develop", "feature/**"]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        type: environment
        required: true
      odoo_version:
        description: 'Odoo version'
        default: '17.0'

permissions:
  contents: read
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      runner-id: ${{ github.run_id }}
      artifact-id: ${{ steps.artifact-upload-step.outputs.artifact-id }}
      artifact_name: ${{ steps.deb_package_step.outputs.artifact_name}}
      github_sha: ${{github.sha}}
      branch: ${{ env.BRANCH }}

    strategy:
      matrix:
        database-name:
        - postgres
        database-password:
        - odoo
        database-user:
        - odoo
        database-host:
        - 127.0.0.1
        database-port:
        - 5432
        redis-password:
        - odoo
    services:
      db:
        image: postgres:15
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
          POSTGRES_DB: ${{ matrix.database-name }}
        ports:
          - 5432:5432
      redis:
        image: redis
        env:
          REDIS_PASSWORD: ${{ matrix.redis-password }}
        options: >-
          --health-cmd "redis-cli -a $REDIS_PASSWORD ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Variables
      id: vars
      uses: actions/github-script@v3
      with:
        script: |
          const tag = context.sha.substring(0,7)
          const branch = context.ref.split('/').pop()
          const { owner, repo } = context.repo;
          core.exportVariable('BRANCH', branch);
          core.exportVariable('TAG', tag);
          core.exportVariable('REPOSITORY_NAME', repo);

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        architecture: "x64"
      env:
        AGENT_TOOLSDIRECTORY: /opt/hostedtoolcache

    - name: Install dependencies
      run: |
        sudo apt-get update && \
        DEBIAN_FRONTEND=noninteractive \
        sudo apt-get install -y --no-install-recommends \
            nfs-common \
            ca-certificates \
            curl \
            dirmngr \
            fonts-noto-cjk \
            gnupg \
            python3-dev \
            libxml2-dev \
            libxslt1-dev \
            zlib1g-dev \
            libsasl2-dev \
            libldap2-dev \
            build-essential \
            libffi-dev \
            libmysqlclient-dev \
            libjpeg-dev \
            libpq-dev \
            libjpeg8-dev \
            liblcms2-dev \
            libblas-dev \
            libatlas-base-dev \
            libssl-dev \
            node-less \
            npm \
            python3-magic \
            python3-num2words \
            python3-odf \
            python3-pdfminer \
            python3-pip \
            python3-phonenumbers \
            python3-pyldap \
            python3-qrcode \
            python3-renderpm \
            python3-setuptools \
            python3-slugify \
            python3-vobject \
            python3-watchdog \
            python3-xlrd \
            python3-xlwt \
            python3-stdeb \
            fakeroot \
            python3-all \
            xz-utils && \
        if [ -z "${TARGETARCH}" ]; then \
            TARGETARCH="$(dpkg --print-architecture)"; \
        fi; \
        WKHTMLTOPDF_ARCH=${TARGETARCH} && \
        case ${TARGETARCH} in \
        "amd64") WKHTMLTOPDF_ARCH=amd64 && WKHTMLTOPDF_SHA=967390a759707337b46d1c02452e2bb6b2dc6d59  ;; \
        "arm64")  WKHTMLTOPDF_SHA=90f6e69896d51ef77339d3f3a20f8582bdf496cc  ;; \
        "ppc64le" | "ppc64el") WKHTMLTOPDF_ARCH=ppc64el && WKHTMLTOPDF_SHA=5312d7d34a25b321282929df82e3574319aed25c  ;; \
        esac \
        && curl -o wkhtmltox.deb -sSL https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.jammy_${WKHTMLTOPDF_ARCH}.deb \
        && echo ${WKHTMLTOPDF_SHA} wkhtmltox.deb | sha1sum -c - \
        && sudo apt-get install -y --no-install-recommends ./wkhtmltox.deb \
        && sudo rm -rf /var/lib/apt/lists/* wkhtmltox.deb
        pip install -r requirements.txt

    # - name: Build Odoo Module
    #   run: |
    #     ./odoo-bin -c resources/odoo-local.conf --without-demo=all

    - name: Run Tests
      run: |
        ./odoo-bin -c resources/odoo-local.conf --test-enable --log-level=test --stop-after-init -u account

    - name: Create .deb Package
      id: deb_package_step
      run: |
        python3 setup.py sdist
        cd dist
        tar -xzf odoo-17.0.tar.gz
        mkdir odoo-17.0/DEBIAN
        touch odoo-17.0/DEBIAN/control 
        echo -e 'Package: odoo-17.0\nVersion: 1.0\nMaintainer: Ashkan Farivarmoheb\nArchitecture: all\nDescription: Odoo 17.0' > odoo-17.0/DEBIAN/control
        dpkg-deb --build odoo-17.0
        mv odoo-17.0.deb odoo-17.0-${{github.sha}}-all.deb
        echo "artifact_name=odoo-17.0-${{github.sha}}-all.deb" >> "$GITHUB_OUTPUT"

    - name: 'Upload Artifact'
      id: artifact-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: odoo-17.0-${{github.sha}}-all
        path: /home/runner/work/odoo-17.0/odoo-17.0/dist/${{ steps.deb_package_step.outputs.artifact_name}}
        retention-days: 10
    
    - name: Output artifact ID
      run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'
      
  ReuseableMatrixJobForDeployment:
    needs: build
    uses: ./.github/workflows/cd.yml
    with:
      target-env: ${{needs.build.outputs.branch}}
    secrets: inherit